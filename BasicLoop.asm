// Translation of "../../8/ProgramFlow/BasicLoop/BasicLoop.vm"
// Generated by vm_translator (1.0.1)
// BEGIN: push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1

// BEGIN: pop LCL 0
@0
D=A
@LCL
D=D+M
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A

// BEGIN: label LOOP
(LOOP)

// BEGIN: push ARG 0
@0
D=A                 
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// BEGIN: push LCL 0
@0
D=A                 
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// BEGIN: add
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1

// BEGIN: pop LCL 0
@0
D=A
@LCL
D=D+M
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A

// BEGIN: push ARG 0
@0
D=A                 
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// BEGIN: push constant 1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1

// BEGIN: sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1

// BEGIN: pop ARG 0
@0
D=A
@ARG
D=D+M
@SP
M=M-1
A=M
D=D+M
A=D-M
M=D-A

// BEGIN: push ARG 0
@0
D=A                 
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

// BEGIN: if-goto LOOP
@SP
M=M-1
A=M
D=M
@LOOP
D;JNE

// BEGIN: push LCL 0
@0
D=A                 
@LCL
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1

